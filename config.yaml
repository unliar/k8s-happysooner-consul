apiVersion: apps/v1
kind: Deployment
metadata:
  name: happy-consul-deployment
spec:
  selector:
    matchLabels:
      app: happy-consul
  replicas: 1
  template:
    metadata:
      labels:
        app: happy-consul
    spec:
      containers:
        - name: happy-consul
          image: hashicorp/consul
          args:
            - "agent"
            - "-dev"
            - "-data-dir=/data"
            - "-node=happy-consul-dc"
            - "-bind=0.0.0.0"
            - "-client=0.0.0.0"
          ports:
            - containerPort: 8500
          volumeMounts:
            - name: volume
              mountPath: /data
          # lifecycle:
          #   preStop:
          #     exec:
          #       command:
          #         - /bin/sh
          #         - -c
          #         - consul leave
      volumes:
        - name: volume
          hostPath:
            path: /data
---
apiVersion: v1
kind: Service
metadata:
  name: happy-consul #Service 的名称
  labels: #Service 自己的标签
    app: happy-consul #为该 Service 设置 key 为 app，value 为 nginx 的标签
spec: #这是关于该 Service 的定义，描述了 Service 如何选择 Pod，如何被访问
  selector: #标签选择器
    app: happy-consul #选择包含标签 app:nginx 的 Pod
  ports:
    - name: ui-port #端口的名字
      protocol: TCP #协议类型 TCP/UDP
      port: 8500 #集群内的其他容器组可通过 8500 端口访问 Service
      nodePort: 32767 #通过任意节点的 40000 端口访问 Service
      targetPort: 8500 #将请求转发到匹配 Pod 的端口
  type: NodePort #Serive的类型，ClusterIP/NodePort/LoaderBalancer
